{"ast":null,"code":"export function compareNameAsc(nomeA, nomeB) {\n  const POSITIONARRAY = -1;\n  if (nomeA.name < nomeB.name) return POSITIONARRAY;\n  if (nomeA.name > nomeB.name) return 1;\n  return 0;\n}\nexport function compareNameDesc(nomeA, nomeB) {\n  const POSITIONARRAY = -1;\n  if (nomeA.name > nomeB.name) return POSITIONARRAY;\n  if (nomeA.name < nomeB.name) return 1;\n  return 0;\n}\nexport function comparePopulationAsc(populationA, populationB) {\n  const POSITIONARRAY = -1;\n  if (Number(populationA.population) < Number(populationB.population)) return POSITIONARRAY;\n  if (Number(populationA.population) > Number(populationB.population)) return 1;\n  return 0;\n}\nexport function comparePopulationDesc(populationA, populationB) {\n  const POSITIONARRAY = -1;\n  if (Number(populationA.population) > Number(populationB.population)) return POSITIONARRAY;\n  if (Number(populationA.population) < Number(populationB.population)) return 1;\n  return 0;\n}\nexport function compareOrbitalAsc(orbitalPeriodA, orbitalPeriodB) {\n  const POSITIONARRAY = -1;\n  if (Number(orbitalPeriodA.orbital_period) < Number(orbitalPeriodB.orbital_period)) return POSITIONARRAY;\n  if (Number(orbitalPeriodA.orbital_period) > Number(orbitalPeriodB.orbital_period)) return 1;\n  return 0;\n}\nexport function compareOrbitalDesc(orbitalPeriodA, orbitalPeriodB) {\n  const POSITIONARRAY = -1;\n  if (Number(orbitalPeriodA.orbital_period) > Number(orbitalPeriodB.orbital_period)) return POSITIONARRAY;\n  if (Number(orbitalPeriodA.orbital_period) < Number(orbitalPeriodB.orbital_period)) return 1;\n  return 0;\n}","map":{"version":3,"sources":["/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/services/orderPlanets.js"],"names":["compareNameAsc","nomeA","nomeB","POSITIONARRAY","name","compareNameDesc","comparePopulationAsc","populationA","populationB","Number","population","comparePopulationDesc","compareOrbitalAsc","orbitalPeriodA","orbitalPeriodB","orbital_period","compareOrbitalDesc"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAC3C,QAAMC,aAAa,GAAG,CAAC,CAAvB;AACA,MAAIF,KAAK,CAACG,IAAN,GAAaF,KAAK,CAACE,IAAvB,EAA6B,OAAOD,aAAP;AAC7B,MAAIF,KAAK,CAACG,IAAN,GAAaF,KAAK,CAACE,IAAvB,EAA6B,OAAO,CAAP;AAC7B,SAAO,CAAP;AACD;AAED,OAAO,SAASC,eAAT,CAAyBJ,KAAzB,EAAgCC,KAAhC,EAAuC;AAC5C,QAAMC,aAAa,GAAG,CAAC,CAAvB;AACA,MAAIF,KAAK,CAACG,IAAN,GAAaF,KAAK,CAACE,IAAvB,EAA6B,OAAOD,aAAP;AAC7B,MAAIF,KAAK,CAACG,IAAN,GAAaF,KAAK,CAACE,IAAvB,EAA6B,OAAO,CAAP;AAC7B,SAAO,CAAP;AACD;AAED,OAAO,SAASE,oBAAT,CAA8BC,WAA9B,EAA2CC,WAA3C,EAAwD;AAC7D,QAAML,aAAa,GAAG,CAAC,CAAvB;AACA,MAAIM,MAAM,CAACF,WAAW,CAACG,UAAb,CAAN,GACFD,MAAM,CAACD,WAAW,CAACE,UAAb,CADR,EACkC,OAAOP,aAAP;AAClC,MAAIM,MAAM,CAACF,WAAW,CAACG,UAAb,CAAN,GACAD,MAAM,CAACD,WAAW,CAACE,UAAb,CADV,EACoC,OAAO,CAAP;AACpC,SAAO,CAAP;AACD;AAED,OAAO,SAASC,qBAAT,CAA+BJ,WAA/B,EAA4CC,WAA5C,EAAyD;AAC9D,QAAML,aAAa,GAAG,CAAC,CAAvB;AACA,MAAIM,MAAM,CAACF,WAAW,CAACG,UAAb,CAAN,GACAD,MAAM,CAACD,WAAW,CAACE,UAAb,CADV,EACoC,OAAOP,aAAP;AACpC,MAAIM,MAAM,CAACF,WAAW,CAACG,UAAb,CAAN,GACED,MAAM,CAACD,WAAW,CAACE,UAAb,CADZ,EACsC,OAAO,CAAP;AACtC,SAAO,CAAP;AACD;AAED,OAAO,SAASE,iBAAT,CAA2BC,cAA3B,EAA2CC,cAA3C,EAA2D;AAChE,QAAMX,aAAa,GAAG,CAAC,CAAvB;AACA,MAAIM,MAAM,CAACI,cAAc,CAACE,cAAhB,CAAN,GACFN,MAAM,CAACK,cAAc,CAACC,cAAhB,CADR,EACyC,OAAOZ,aAAP;AACzC,MAAIM,MAAM,CAACI,cAAc,CAACE,cAAhB,CAAN,GACEN,MAAM,CAACK,cAAc,CAACC,cAAhB,CADZ,EAC6C,OAAO,CAAP;AAC7C,SAAO,CAAP;AACD;AAED,OAAO,SAASC,kBAAT,CAA4BH,cAA5B,EAA4CC,cAA5C,EAA4D;AACjE,QAAMX,aAAa,GAAG,CAAC,CAAvB;AACA,MAAIM,MAAM,CAACI,cAAc,CAACE,cAAhB,CAAN,GACAN,MAAM,CAACK,cAAc,CAACC,cAAhB,CADV,EAC2C,OAAOZ,aAAP;AAC3C,MAAIM,MAAM,CAACI,cAAc,CAACE,cAAhB,CAAN,GACIN,MAAM,CAACK,cAAc,CAACC,cAAhB,CADd,EAC+C,OAAO,CAAP;AAC/C,SAAO,CAAP;AACD","sourcesContent":["export function compareNameAsc(nomeA, nomeB) {\n  const POSITIONARRAY = -1;\n  if (nomeA.name < nomeB.name) return POSITIONARRAY;\n  if (nomeA.name > nomeB.name) return 1;\n  return 0;\n}\n\nexport function compareNameDesc(nomeA, nomeB) {\n  const POSITIONARRAY = -1;\n  if (nomeA.name > nomeB.name) return POSITIONARRAY;\n  if (nomeA.name < nomeB.name) return 1;\n  return 0;\n}\n\nexport function comparePopulationAsc(populationA, populationB) {\n  const POSITIONARRAY = -1;\n  if (Number(populationA.population)\n  < Number(populationB.population)) return POSITIONARRAY;\n  if (Number(populationA.population)\n    > Number(populationB.population)) return 1;\n  return 0;\n}\n\nexport function comparePopulationDesc(populationA, populationB) {\n  const POSITIONARRAY = -1;\n  if (Number(populationA.population)\n    > Number(populationB.population)) return POSITIONARRAY;\n  if (Number(populationA.population)\n      < Number(populationB.population)) return 1;\n  return 0;\n}\n\nexport function compareOrbitalAsc(orbitalPeriodA, orbitalPeriodB) {\n  const POSITIONARRAY = -1;\n  if (Number(orbitalPeriodA.orbital_period)\n  < Number(orbitalPeriodB.orbital_period)) return POSITIONARRAY;\n  if (Number(orbitalPeriodA.orbital_period)\n      > Number(orbitalPeriodB.orbital_period)) return 1;\n  return 0;\n}\n\nexport function compareOrbitalDesc(orbitalPeriodA, orbitalPeriodB) {\n  const POSITIONARRAY = -1;\n  if (Number(orbitalPeriodA.orbital_period)\n    > Number(orbitalPeriodB.orbital_period)) return POSITIONARRAY;\n  if (Number(orbitalPeriodA.orbital_period)\n        < Number(orbitalPeriodB.orbital_period)) return 1;\n  return 0;\n}\n"]},"metadata":{},"sourceType":"module"}