{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/Components/Table.js\";\nimport React, { useContext, useEffect } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\n\nfunction Table() {\n  const context = useContext(PlanetsContext);\n  const {\n    data,\n    isLoading,\n    filters,\n    setData,\n    copyResults,\n    resetFilter\n  } = context;\n  const {\n    filterByNumericValues\n  } = filters;\n  const {\n    name\n  } = filters.filterByName;\n  useEffect(() => {\n    if (name.length < 1) return setData(copyResults);\n    const filterPlanets = data.filter(planet => planet.name.toLowerCase().includes(name));\n    if (filterPlanets.length < 1) return setData(copyResults);\n    setData(filterPlanets);\n  }, [name]);\n\n  const resetPlanets = () => {\n    setData(copyResults);\n    resetFilter();\n  };\n\n  const checkComparison = currItem => {\n    const currColumn = currItem.column;\n    const currComparison = currItem.comparison;\n    const currValue = Number(currItem.value);\n\n    switch (currComparison) {\n      case 'maior que':\n        return data.filter(item => Number(item[currColumn]) > currValue);\n\n      case 'menor que':\n        return data.filter(item => Number(item[currColumn]) < currValue);\n\n      case 'igual a':\n        return data.filter(item => Number(item[currColumn]) === currValue);\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (filterByNumericValues.length < 1) return setData(copyResults);\n    const aplyFilter = filterByNumericValues.reduce((acc, currItem) => {\n      const filter = checkComparison(currItem);\n      return filter;\n    }, []);\n    if (aplyFilter.length < 1) return setData('');\n    setData(aplyFilter);\n  }, [filterByNumericValues]);\n  if (isLoading) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n\n  if (data.length < 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"No have Planets with this filter\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: resetPlanets,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Reset Planets\"));\n  }\n\n  const infos = Object.keys(data[0]);\n  const filterInfo = infos.filter(item => item !== 'url');\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, filterInfo.map((item, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 45\n    }\n  }, item)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, data.map(({\n    name,\n    rotationPeriod,\n    orbitalPeriod,\n    diameter,\n    climate,\n    gravity,\n    terrain,\n    surfaceWater,\n    population\n  }) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: info.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-testid\": \"planet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, info.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, info.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, info.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, info.diameter), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, info.climate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, info.gravity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, info.terrain), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, info.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, info.population), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, info.residents.map(resident => resident)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, info.films.map(film => film)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, info.created), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, info.edited)))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/Components/Table.js"],"names":["React","useContext","useEffect","PlanetsContext","Table","context","data","isLoading","filters","setData","copyResults","resetFilter","filterByNumericValues","name","filterByName","length","filterPlanets","filter","planet","toLowerCase","includes","resetPlanets","checkComparison","currItem","currColumn","column","currComparison","comparison","currValue","Number","value","item","aplyFilter","reduce","acc","infos","Object","keys","filterInfo","map","index","rotationPeriod","orbitalPeriod","diameter","climate","gravity","terrain","surfaceWater","population","info","rotation_period","orbital_period","surface_water","residents","resident","films","film","created","edited"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\n\nfunction Table() {\n  const context = useContext(PlanetsContext);\n\n  const { data, isLoading, filters, setData, copyResults, resetFilter } = context;\n  const { filterByNumericValues } = filters;\n  const { name } = filters.filterByName;\n\n  useEffect(() => {\n    if (name.length < 1) return setData(copyResults);\n    const filterPlanets = data\n      .filter((planet) => planet.name.toLowerCase().includes(name));\n    if (filterPlanets.length < 1) return setData(copyResults);\n    setData(filterPlanets);\n  }, [name]);\n\n  const resetPlanets = () => {\n    setData(copyResults);\n    resetFilter();\n  };\n\n  const checkComparison = (currItem) => {\n    const currColumn = currItem.column;\n    const currComparison = currItem.comparison;\n    const currValue = Number(currItem.value);\n    switch (currComparison) {\n    case 'maior que':\n      return data.filter((item) => Number(item[currColumn]) > currValue);\n    case 'menor que':\n      return data.filter((item) => Number(item[currColumn]) < currValue);\n    case 'igual a':\n      return data.filter((item) => Number(item[currColumn]) === currValue);\n    default:\n      break;\n    }\n  };\n\n  useEffect(() => {\n    if (filterByNumericValues.length < 1) return setData(copyResults);\n    const aplyFilter = filterByNumericValues.reduce((acc, currItem) => {\n      const filter = checkComparison(currItem);\n      return filter;\n    }, []);\n    if (aplyFilter.length < 1) return setData('');\n    setData(aplyFilter);\n  }, [filterByNumericValues]);\n\n  if (isLoading) return <h2>Loading...</h2>;\n\n  if (data.length < 1) {\n    return (\n      <div>\n        <h2>No have Planets with this filter</h2>\n        <button type=\"button\" onClick={ resetPlanets }>Reset Planets</button>\n      </div>\n    );\n  }\n\n  const infos = Object.keys(data[0]);\n\n  const filterInfo = infos.filter((item) => item !== 'url');\n\n  return (\n    <table>\n\n      <thead>\n\n        <tr>\n          { filterInfo.map((item, index) => <th key={ index }>{item}</th>)}\n        </tr>\n\n      </thead>\n\n      <tbody>\n\n        {data.map(({name, rotationPeriod, orbitalPeriod, diameter, climate, gravity, terrain, surfaceWater, population,}) => (\n\n          <tr key={ info.name }>\n\n            <td data-testid=\"planet-name\">{info.name}</td>\n            <td>{info.rotation_period}</td>\n            <td>{info.orbital_period}</td>\n            <td>{info.diameter}</td>\n            <td>{info.climate}</td>\n            <td>{info.gravity}</td>\n            <td>{info.terrain}</td>\n            <td>{info.surface_water}</td>\n            <td>{info.population}</td>\n            <td>{info.residents.map((resident) => resident)}</td>\n            <td>{info.films.map((film) => film)}</td>\n            <td>{info.created}</td>\n            <td>{info.edited}</td>\n\n          </tr>\n\n        ))}\n\n      </tbody>\n\n    </table>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}