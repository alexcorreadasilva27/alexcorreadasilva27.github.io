{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/Components/OrderFilter.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport { compareNameAsc, compareNameDesc, compareOrbitalAsc, compareOrbitalDesc, comparePopulationAsc, comparePopulationDesc } from '../services/orderPlanets';\nimport '../styles/orderF';\n\nfunction OrderFilter() {\n  const context = useContext(PlanetsContext);\n  const {\n    setOrderSort,\n    data,\n    setData\n  } = context;\n  const [orderBy, setOrderBy] = useState('name');\n  const [orderForm, setOrderForm] = useState('ASC');\n\n  const ordersPlanets = (type, form) => {\n    if (type === 'name') {\n      switch (form) {\n        case 'ASC':\n          return setData(data.sort(compareNameAsc));\n\n        case 'DESC':\n          return setData(data.sort(compareNameDesc));\n\n        default:\n          break;\n      }\n    }\n\n    if (type === 'population') {\n      switch (form) {\n        case 'ASC':\n          return setData(data.sort(comparePopulationAsc));\n\n        case 'DESC':\n          return setData(data.sort(comparePopulationDesc));\n\n        default:\n          break;\n      }\n    }\n\n    if (type === 'orbital_period') {\n      switch (form) {\n        case 'ASC':\n          return setData(data.sort(compareOrbitalAsc));\n\n        case 'DESC':\n          return setData(data.sort(compareOrbitalDesc));\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const getOrderForm = () => {\n    ordersPlanets(orderBy, orderForm);\n  };\n\n  useEffect(() => {\n    setOrderSort(orderBy, orderForm);\n    getOrderForm(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, orderBy, orderForm]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Order By:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setOrderBy(event.target.value),\n    \"data-testid\": \"column-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"population\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"orbital_period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Orbital Period\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"In a way:\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Ascendant\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-asc\",\n    type: \"radio\",\n    onChange: event => setOrderForm(event.target.value),\n    id: \"asc\",\n    defaultChecked: true,\n    name: \"ordeBy\",\n    value: \"ASC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Downward\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-desc\",\n    type: \"radio\",\n    onChange: event => setOrderForm(event.target.value),\n    id: \"desc\",\n    name: \"ordeBy\",\n    value: \"DESC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: getOrderForm,\n    \"data-testid\": \"column-sort-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Order Columns\"));\n}\n\nexport default OrderFilter;","map":{"version":3,"sources":["/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/Components/OrderFilter.js"],"names":["React","useContext","useEffect","useState","PlanetsContext","compareNameAsc","compareNameDesc","compareOrbitalAsc","compareOrbitalDesc","comparePopulationAsc","comparePopulationDesc","OrderFilter","context","setOrderSort","data","setData","orderBy","setOrderBy","orderForm","setOrderForm","ordersPlanets","type","form","sort","getOrderForm","event","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport {\n  compareNameAsc,\n  compareNameDesc,\n  compareOrbitalAsc,\n  compareOrbitalDesc,\n  comparePopulationAsc,\n  comparePopulationDesc,\n} from '../services/orderPlanets';\nimport '../styles/orderF'\n\nfunction OrderFilter() {\n  const context = useContext(PlanetsContext);\n  const { setOrderSort, data, setData } = context;\n  const [orderBy, setOrderBy] = useState('name');\n  const [orderForm, setOrderForm] = useState('ASC');\n\n  const ordersPlanets = (type, form) => {\n    if (type === 'name') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(compareNameAsc));\n      case 'DESC':\n        return setData(data.sort(compareNameDesc));\n      default:\n        break;\n      }\n    }\n    if (type === 'population') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(comparePopulationAsc));\n      case 'DESC':\n        return setData(data.sort(comparePopulationDesc));\n      default:\n        break;\n      }\n    }\n    if (type === 'orbital_period') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(compareOrbitalAsc));\n      case 'DESC':\n        return setData(data.sort(compareOrbitalDesc));\n      default:\n        break;\n      }\n    }\n  };\n\n  const getOrderForm = () => {\n    ordersPlanets(orderBy, orderForm);\n  };\n\n  useEffect(() => {\n    setOrderSort(orderBy, orderForm);\n    getOrderForm();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, orderBy, orderForm]);\n\n  return (\n    <div className=\"order-filter\">\n      <span>Order By:</span>\n      <select\n        onChange={ (event) => setOrderBy(event.target.value) }\n        data-testid=\"column-sort\"\n      >\n        <option value=\"name\">Name</option>\n        <option value=\"population\">Population</option>\n        <option value=\"orbital_period\">Orbital Period</option>\n      </select>\n      <span>In a way:</span>\n      <label htmlFor=\"asc\">\n        Ascendant\n        <input\n          data-testid=\"column-sort-input-asc\"\n          type=\"radio\"\n          onChange={ (event) => setOrderForm(event.target.value) }\n          id=\"asc\"\n          defaultChecked\n          name=\"ordeBy\"\n          value=\"ASC\"\n        />\n      </label>\n      <label htmlFor=\"desc\">\n        Downward\n        <input\n          data-testid=\"column-sort-input-desc\"\n          type=\"radio\"\n          onChange={ (event) => setOrderForm(event.target.value) }\n          id=\"desc\"\n          name=\"ordeBy\"\n          value=\"DESC\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        onClick={ getOrderForm }\n        data-testid=\"column-sort-button\"\n      >\n        Order Columns\n      </button>\n    </div>\n  );\n}\n\nexport default OrderFilter;\n"]},"metadata":{},"sourceType":"module"}