{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/Components/OrderFilter.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport PlanessContext from '../Context/PlanetsContext';\nimport { compareNameAsc, compareNameDesc, compareOrbitalAsc, compareOrbitalDesc, comparePopulationAsc, comparePopulationDesc } from '../services/orderPlanets';\n\nfunction OrderFilter() {\n  const context = useContext(PlanestContext);\n  const {\n    setOrderSort,\n    data,\n    setData\n  } = context;\n  const [orderBy, setOrderBy] = useState('name');\n  const [orderForm, setOrderForm] = useState('ASC');\n\n  const orderPlanets = (type, form) => {\n    if (type === 'name') {\n      switch (form) {\n        case 'ASC':\n          return setData(data.sort(compareNameAsc));\n\n        case 'DESC':\n          return setData(data.sort(compareNameDesc));\n\n        default:\n          break;\n      }\n    }\n\n    if (type === 'population') {\n      switch (form) {\n        case 'ASC':\n          return setData(data.sort(comparePopulationAsc));\n\n        case 'DESC':\n          return setData(data.sort(comparePopulationDesc));\n\n        default:\n          break;\n      }\n    }\n\n    if (type === 'orbital_period') {\n      switch (form) {\n        case 'ASC':\n          return setData(data.sort(compareOrbitalAsc));\n\n        case 'DESC':\n          return setData(data.sort(compareOrbitalDesc));\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const getOrderForm = () => {\n    orderPlanets(orderBy, orderForm);\n  };\n\n  useEffect(() => {\n    setOrderSort(orderBy, orderForm);\n    getOrderForm();\n  }, [data, orderBy, orderForm]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"STAR WARS PLANET SEARCH\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Order By:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setOrderBy(e.target.value),\n    \"data-testid\": \"column-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"population\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Population\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"orbital_period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Orbital Period\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"In a way:\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Ascendant\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-asc\",\n    type: \"radio\",\n    onChange: e => setOrderForm(e.target.value),\n    id: \"asc\",\n    defaultChecked: true,\n    name: \"orderBy\",\n    value: \"ASC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Downward\", /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"column-sort-input-desc\",\n    type: \"radio\",\n    onChange: e => setOrderForm(e.target.value),\n    id: \"desc\",\n    name: \"orderBy\",\n    value: \"DESC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: getOrderForm,\n    \"data-testid\": \"column-sort-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Order Columns\"));\n}\n\nexport default OrderFilter;","map":{"version":3,"sources":["/home/alex/projetos/sd-013-b-project-starwars-planets-search/src/Components/OrderFilter.js"],"names":["React","useContext","useEffect","useState","PlanessContext","compareNameAsc","compareNameDesc","compareOrbitalAsc","compareOrbitalDesc","comparePopulationAsc","comparePopulationDesc","OrderFilter","context","PlanestContext","setOrderSort","data","setData","orderBy","setOrderBy","orderForm","setOrderForm","orderPlanets","type","form","sort","getOrderForm","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PlanessContext from '../Context/PlanetsContext';\nimport { compareNameAsc, compareNameDesc,\n  compareOrbitalAsc,\n  compareOrbitalDesc,\n  comparePopulationAsc, comparePopulationDesc } from '../services/orderPlanets';\n\nfunction OrderFilter() {\n  const context = useContext(PlanestContext);\n  const { setOrderSort, data, setData } = context;\n  const [orderBy, setOrderBy] = useState('name');\n  const [orderForm, setOrderForm] = useState('ASC');\n\n  const orderPlanets = (type, form) => {\n    if (type === 'name') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(compareNameAsc));\n      case 'DESC':\n        return setData(data.sort(compareNameDesc));\n      default:\n        break;\n      }\n    }\n    if (type === 'population') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(comparePopulationAsc));\n      case 'DESC':\n        return setData(data.sort(comparePopulationDesc));\n      default:\n        break;\n      }\n    }\n    if (type === 'orbital_period') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(compareOrbitalAsc));\n      case 'DESC':\n        return setData(data.sort(compareOrbitalDesc));\n      default:\n        break;\n      }\n    }\n  };\n\n  const getOrderForm = () => {\n    orderPlanets(orderBy, orderForm);\n  };\n\n  useEffect(() => {\n    setOrderSort(orderBy, orderForm);\n    getOrderForm();\n  }, [data, orderBy, orderForm]);\n\n  return (\n    <div className=\"App\">\n      <h1>STAR WARS PLANET SEARCH</h1>\n      <span>Order By:</span>\n      <select\n        onChange={ (e) => setOrderBy(e.target.value) }\n        data-testid=\"column-sort\"\n      >\n        <option value=\"name\">Name</option>\n        <option value=\"population\">Population</option>\n        <option value=\"orbital_period\">Orbital Period</option>\n      </select>\n      <span>In a way:</span>\n      <label htmlFor=\"asc\">\n        Ascendant\n        <input\n          data-testid=\"column-sort-input-asc\"\n          type=\"radio\"\n          onChange={ (e) => setOrderForm(e.target.value) }\n          id=\"asc\"\n          defaultChecked\n          name=\"orderBy\"\n          value=\"ASC\"\n        />\n      </label>\n      <label htmlFor=\"desc\">\n        Downward\n        <input\n          data-testid=\"column-sort-input-desc\"\n          type=\"radio\"\n          onChange={ (e) => setOrderForm(e.target.value) }\n          id=\"desc\"\n          name=\"orderBy\"\n          value=\"DESC\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        onClick={ getOrderForm }\n        data-testid=\"column-sort-button\"\n      >\n        Order Columns\n      </button>\n    </div>\n  );\n}\n\nexport default OrderFilter;\n"]},"metadata":{},"sourceType":"module"}