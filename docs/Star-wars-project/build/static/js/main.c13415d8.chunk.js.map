{"version":3,"sources":["Context/PlanetsContext.js","Components/Table.js","Components/Filters.js","services/planetsAPI.js","Context/PlanetProvider.js","services/orderPlanets.js","Components/OrderFilter.js","App.js","index.js"],"names":["PlanetsContext","createContext","Table","context","useContext","data","isLoading","filters","setData","copyResults","resetFilter","filterByNumericValues","name","filterByName","useEffect","length","filterPlanets","filter","planet","toLowerCase","includes","aplyFilter","reduce","acc","currItem","currColumn","column","currComparison","comparison","currValue","Number","value","item","checkComparison","type","onClick","filterInfo","Object","keys","className","map","index","key","info","data-testid","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","film","created","edited","url","Filters","setFilterName","sendFilterNumeric","deleteFilter","allTypes","addType","useState","types","setFilterTypes","filterByType","setFilterByType","filtercomparison","setfilterComparison","number","setNumber","disabled","onChange","placeholder","event","target","obj","filterType","filter2","find","deleteCurrFilter","planetsAPI","a","fetch","response","json","PlanetsProvider","children","setIsLoading","loadError","setLoadError","setcopyResults","setAllTypes","order","sort","setFilters","getInfoPlanets","results","loading","arr","setOrderSort","Provider","compareNameAsc","nomeA","nomeB","compareNameDesc","comparePopulationAsc","populationA","populationB","comparePopulationDesc","compareOrbitalAsc","orbitalPeriodA","orbitalPeriodB","compareOrbitalDesc","OrderFilter","orderBy","setOrderBy","orderForm","setOrderForm","getOrderForm","form","ordersPlanets","htmlFor","id","defaultChecked","App","src","width","height","frameBorder","allowtransparency","allow","title","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c13415d8.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetsContext = createContext();\n\nexport default PlanetsContext;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport '../styles/table.css';\n\nfunction Table() {\n  const context = useContext(PlanetsContext);\n\n  const { data, isLoading, filters, setData, copyResults, resetFilter } = context;\n  const { filterByNumericValues } = filters;\n  const { name } = filters.filterByName;\n\n  useEffect(() => {\n    if (name.length < 1) return setData(copyResults);\n    const filterPlanets = data\n      .filter((planet) => planet.name.toLowerCase().includes(name));\n    if (filterPlanets.length < 1) return setData(copyResults);\n    setData(filterPlanets);\n  }, [name]);\n\n  const resetPlanets = () => {\n    setData(copyResults);\n    resetFilter();\n  };\n\n  const checkComparison = (currItem) => {\n    const currColumn = currItem.column;\n    const currComparison = currItem.comparison;\n    const currValue = Number(currItem.value);\n    switch (currComparison) {\n    case 'maior que':\n      return data.filter((item) => Number(item[currColumn]) > currValue);\n    case 'menor que':\n      return data.filter((item) => Number(item[currColumn]) < currValue);\n    case 'igual a':\n      return data.filter((item) => Number(item[currColumn]) === currValue);\n    default:\n      break;\n    }\n  };\n\n  useEffect(() => {\n    if (filterByNumericValues.length < 1) return setData(copyResults);\n    const aplyFilter = filterByNumericValues.reduce((acc, currItem) => {\n      const filter = checkComparison(currItem);\n      return filter;\n    }, []);\n    if (aplyFilter.length < 1) return setData('');\n    setData(aplyFilter);\n  }, [filterByNumericValues]);\n\n  if (isLoading) return <h2>Loading...</h2>;\n\n  if (data.length < 1) {\n    return (\n      <div>\n        <h2>No have Planets with this filter</h2>\n        <button type=\"button\" onClick={ resetPlanets }>Reset Planets</button>\n      </div>\n    );\n  }\n\n  const infos = Object.keys(data[0]);\n\n  const filterInfo = infos.filter((item) => item !== 'residents');\n\n  return (\n    <table className=\"table\">\n\n      <thead>\n\n        <tr className=\"tr-thead\">\n          { filterInfo.map((item, index) => <th key={ index }>{item}</th>)}\n        </tr>\n\n      </thead>\n\n      <tbody>\n\n        {data.map((info) => (\n\n          <tr key={ info.name }>\n\n            <td data-testid=\"planet-name\">{info.name}</td>\n            <td>{info.rotation_period }</td>\n            <td>{info.orbital_period}</td>\n            <td>{info.diameter}</td>\n            <td>{info.climate}</td>\n            <td>{info.gravity}</td>\n            <td>{info.terrain}</td>\n            <td>{info.surface_water}</td>\n            <td>{info.population}</td>\n            <td className=\"td-films\">{info.films.map((film) => ` ${film} `)}</td>\n            <td>{info.created}</td>\n            <td>{info.edited}</td>\n            <td className=\"td-url\">{info.url}</td>\n\n          </tr>\n\n        ))}\n\n      </tbody>\n\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport '../styles/filter.css';\n\nfunction Filters() {\n  const context = useContext(PlanetsContext);\n\n  const {\n    filters,\n    setFilterName,\n    sendFilterNumeric,\n    deleteFilter,\n    allTypes,\n    addType,\n  } = context;\n\n  const { filterByNumericValues } = filters;\n\n  const { name } = filters.filterByName;\n\n  const [types, setFilterTypes] = useState(['population',\n    'orbital_period', 'diameter', 'rotation_period', 'surface_water']);\n  const comparison = ['maior que', 'menor que', 'igual a'];\n\n  const [filterByType, setFilterByType] = useState(types[0]);\n  const [filtercomparison, setfilterComparison] = useState('maior que');\n  const [number, setNumber] = useState(0);\n\n  const setTypes = (event) => {\n    const { value } = event.target;\n    setFilterByType(value);\n  };\n\n  useEffect(() => setFilterByType(types[0]), [types]);\n\n  const deleteCurrFilter = (filterType) => {\n    const filter = filterByNumericValues.filter((item) => item.column !== filterType);\n    const filter2 = allTypes.find((type) => filterType === type);\n    setFilterTypes([...types, filter2]);\n    deleteFilter(filter);\n  };\n\n  const setComparison = (event) => {\n    const { value } = event.target;\n    if (filtercomparison.includes(value)) return;\n    setfilterComparison(value);\n  };\n\n  const setFilterValue = (event) => {\n    const { value } = event.target;\n    setNumber(value);\n  };\n\n  const sendFilters = () => {\n    const obj = { column: filterByType, comparison: filtercomparison, value: number };\n    addType(filterByType);\n    sendFilterNumeric(obj);\n    setFilterTypes(types.filter((type) => type !== filterByType));\n  };\n\n  const disabled = types.length < 1;\n  return (\n    <form className=\"App\">\n      <h1 className=\"planetSearch\">PLANET SEARCH</h1>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        onChange={ setFilterName }\n        value={ name }\n        className=\"name-filter\"\n        placeholder=\"Enter the planet name\"\n      />\n      <select\n        onChange={ setTypes }\n        disabled={ disabled }\n        value={ filterByType }\n        data-testid=\"column-filter\"\n        className=\"column-filter\"\n      >\n        {types.length > 0 ? types.map((item) => (\n          <option key={ item }>{item}</option>\n        )) : <option disabled>Empty</option> }\n      </select>\n      <select\n        disabled={ disabled }\n        onChange={ setComparison }\n        value={ filtercomparison }\n        data-testid=\"comparison-filter\"\n        className=\"comparison-filter\"\n      >\n        {comparison.map((item) => (\n          <option key={ item } value={ item }>{item}</option>\n        ))}\n      </select>\n      <input\n        disabled={ disabled }\n        type=\"number\"\n        value={ number }\n        onChange={ setFilterValue }\n        data-testid=\"value-filter\"\n        className=\"value-filter\"\n      />\n      <button\n        disabled={ disabled || number === 0 }\n        type=\"button\"\n        onClick={ sendFilters }\n        data-testid=\"button-filter\"\n        className=\"button-filter\"\n      >\n        Filtrar\n      </button>\n      { filterByNumericValues.map((item) => (\n        <div\n          key={ item.column }\n          data-testid=\"filter\"\n          className=\"filter\"\n        >\n          {`${item.column} ${item.comparison} ${item.value}`}\n          <button\n            onClick={ () => deleteCurrFilter(item.column) }\n            type=\"button\"\n            className=\"button\"\n          >\n            X\n          </button>\n        </div>\n      ))}\n    </form>\n  );\n}\n\nexport default Filters;\n","const planetsAPI = async () => {\n  const url = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    // console.log(data);\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default planetsAPI;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport planetsAPI from '../services/planetsAPI';\nimport PlanetsContext from './PlanetsContext';\n\nfunction PlanetsProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [copyResults, setcopyResults] = useState([]);\n  const [allTypes, setAllTypes] = useState([]);\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n    order: {\n      column: 'name',\n      sort: 'ASC',\n    },\n  });\n\n  const setOrderSort = (column, sort) => {\n    setFilters({ ...filters, order: { column, sort } });\n  };\n\n  const setFilterName = (event) => {\n    const { value } = event.target;\n    setFilters({ ...filters, filterByName: { name: value.toLowerCase() } });\n  };\n\n  const sendFilterNumeric = (obj) => {\n    const { filterByNumericValues } = filters;\n    setFilters({ ...filters, filterByNumericValues: [...filterByNumericValues, obj] });\n  };\n\n  const deleteFilter = (arr) => {\n    setFilters({ ...filters, filterByNumericValues: arr });\n  };\n\n  const resetFilter = () => {\n    setFilters({ ...filters, filterByNumericValues: [] });\n  };\n\n  const addType = (type) => {\n    setAllTypes([...allTypes, type]);\n  };\n\n  useEffect(() => {\n    const loading = async () => {\n      try {\n        setIsLoading(true);\n        setLoadError(false);\n        const getInfoPlanets = await planetsAPI();\n        setData(getInfoPlanets.results);\n        setcopyResults(getInfoPlanets.results);\n        setIsLoading(false);\n      } catch (error) {\n        setLoadError(true);\n        setIsLoading(false);\n      }\n    };\n    loading();\n  }, []);\n\n  const context = {\n    data,\n    isLoading,\n    loadError,\n    filters,\n    setFilterName,\n    setData,\n    copyResults,\n    sendFilterNumeric,\n    deleteFilter,\n    resetFilter,\n    allTypes,\n    addType,\n    setOrderSort };\n\n  return (\n    <PlanetsContext.Provider value={ context }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nPlanetsProvider.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\n\nexport default PlanetsProvider;\n","export function compareNameAsc(nomeA, nomeB) {\n  const POSITIONARRAY = -1;\n  if (nomeA.name < nomeB.name) return POSITIONARRAY;\n  if (nomeA.name > nomeB.name) return 1;\n  return 0;\n}\n\nexport function compareNameDesc(nomeA, nomeB) {\n  const POSITIONARRAY = -1;\n  if (nomeA.name > nomeB.name) return POSITIONARRAY;\n  if (nomeA.name < nomeB.name) return 1;\n  return 0;\n}\n\nexport function comparePopulationAsc(populationA, populationB) {\n  const POSITIONARRAY = -1;\n  if (Number(populationA.population)\n  < Number(populationB.population)) return POSITIONARRAY;\n  if (Number(populationA.population)\n    > Number(populationB.population)) return 1;\n  return 0;\n}\n\nexport function comparePopulationDesc(populationA, populationB) {\n  const POSITIONARRAY = -1;\n  if (Number(populationA.population)\n    > Number(populationB.population)) return POSITIONARRAY;\n  if (Number(populationA.population)\n      < Number(populationB.population)) return 1;\n  return 0;\n}\n\nexport function compareOrbitalAsc(orbitalPeriodA, orbitalPeriodB) {\n  const POSITIONARRAY = -1;\n  if (Number(orbitalPeriodA.orbital_period)\n  < Number(orbitalPeriodB.orbital_period)) return POSITIONARRAY;\n  if (Number(orbitalPeriodA.orbital_period)\n      > Number(orbitalPeriodB.orbital_period)) return 1;\n  return 0;\n}\n\nexport function compareOrbitalDesc(orbitalPeriodA, orbitalPeriodB) {\n  const POSITIONARRAY = -1;\n  if (Number(orbitalPeriodA.orbital_period)\n    > Number(orbitalPeriodB.orbital_period)) return POSITIONARRAY;\n  if (Number(orbitalPeriodA.orbital_period)\n        < Number(orbitalPeriodB.orbital_period)) return 1;\n  return 0;\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport PlanetsContext from '../Context/PlanetsContext';\nimport {\n  compareNameAsc,\n  compareNameDesc,\n  compareOrbitalAsc,\n  compareOrbitalDesc,\n  comparePopulationAsc,\n  comparePopulationDesc,\n} from '../services/orderPlanets';\nimport '../styles/orderFilter.css';\n\nfunction OrderFilter() {\n  const context = useContext(PlanetsContext);\n  const { setOrderSort, data, setData } = context;\n  const [orderBy, setOrderBy] = useState('name');\n  const [orderForm, setOrderForm] = useState('ASC');\n\n  const ordersPlanets = (type, form) => {\n    if (type === 'name') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(compareNameAsc));\n      case 'DESC':\n        return setData(data.sort(compareNameDesc));\n      default:\n        break;\n      }\n    }\n    if (type === 'population') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(comparePopulationAsc));\n      case 'DESC':\n        return setData(data.sort(comparePopulationDesc));\n      default:\n        break;\n      }\n    }\n    if (type === 'orbital_period') {\n      switch (form) {\n      case 'ASC':\n        return setData(data.sort(compareOrbitalAsc));\n      case 'DESC':\n        return setData(data.sort(compareOrbitalDesc));\n      default:\n        break;\n      }\n    }\n  };\n\n  const getOrderForm = () => {\n    ordersPlanets(orderBy, orderForm);\n  };\n\n  useEffect(() => {\n    setOrderSort(orderBy, orderForm);\n    getOrderForm();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, orderBy, orderForm]);\n\n  return (\n    <div className=\"order-filter\">\n      <span>Order By:</span>\n      <select\n        onChange={ (event) => setOrderBy(event.target.value) }\n        data-testid=\"column-sort\"\n        className=\"column-sort\"\n      >\n        <option value=\"name\">Name</option>\n        <option value=\"population\">Population</option>\n        <option value=\"orbital_period\">Orbital Period</option>\n      </select>\n      <span>In a way: </span>\n      <label htmlFor=\"asc\" className=\"ascendant\">\n        ASC\n        <input\n          data-testid=\"column-sort-input-asc\"\n          type=\"radio\"\n          onChange={ (event) => setOrderForm(event.target.value) }\n          id=\"asc\"\n          defaultChecked\n          name=\"ordeBy\"\n          value=\"ASC\"\n        />\n      </label>\n      <label htmlFor=\"desc\" className=\"downward\">\n        DESC\n        <input\n          data-testid=\"column-sort-input-desc\"\n          type=\"radio\"\n          onChange={ (event) => setOrderForm(event.target.value) }\n          id=\"desc\"\n          name=\"ordeBy\"\n          value=\"DESC\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        onClick={ getOrderForm }\n        data-testid=\"column-sort-button\"\n        className=\"column-sort-button\"\n      >\n        Order Columns\n      </button>\n    </div>\n  );\n}\n\nexport default OrderFilter;\n","import React from 'react';\nimport './App.css';\n// import ReactAudioPlayer from 'react-audio-player';\nimport Table from './Components/Table';\nimport Filters from './Components/Filters';\nimport PlanetsProvider from './Context/PlanetProvider';\nimport OrderFilter from './Components/OrderFilter';\n\nfunction App() {\n  return (\n    <PlanetsProvider>\n      <header className=\"background-starwars\">\n        <iframe\n          src=\"https://open.spotify.com/embed/track/2bw4WgXyXP90hIex7ur58y?theme=0\"\n          width=\"100%\"\n          height=\"380\"\n          frameBorder=\"0\"\n          allowtransparency=\"true\"\n          allow=\"encrypted-media\"\n          title=\"StarWars\"\n          className=\"MarchImperial\"\n        >\n          Star Wars\n        </iframe>\n        <Filters />\n        <OrderFilter />\n      </header>\n      <Table />\n    </PlanetsProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}